---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Container from '../../components/Container.astro';
import ColumnSidebar from '@components/Article/Sidebar/ColumnSidebar.astro';
import SnsShare from '../../components/Article/SnsShare.astro';
import { getColumnCategoryDataBySlug, getColumnCategoryUrl } from '@utils/columnCategories';
import TableOfContents from '../../components/TableOfContents.astro';
import Breadcrumb from '@components/Breadcrumb.astro';
import {COLUMN_SINGLE_METADATA} from '@data/metadata';
import AdUnit from '@components/Article/Ads/AdUnit.astro';
import { getCollection } from 'astro:content';
import ArticleContent from '../../components/Article/ArticleContent.astro';
import { Image } from 'astro:assets';
import { IoFolderOutline } from "react-icons/io5";
// 1. コレクションエントリーごとに新しいパスを生成
export async function getStaticPaths() {
  const columnEntries = await getCollection('column');
  return columnEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. テンプレートでは、プロパティからエントリーを直接取得できる
const { entry } = Astro.props;

const currentUrl = Astro.url;

const breadcrumbLinks = [
  { href: '/', label: 'ホーム' },
  { href: '/column', label: 'コラム' },
]

const url = Astro.url.origin;
---

<BaseLayout title={`${entry.data.title} | ${COLUMN_SINGLE_METADATA.title}`} ogImageUrl={`${url}${entry.data.thumbnail.src}`} description={entry.data.description}>
  <div class="mv">
    <p class="mv__title">コラム</p>
  </div>
<div class="body">
  <Breadcrumb data={breadcrumbLinks} />
  <Container>
    <div class="wrap">
      <main class="main">
        <div class="category">
          <a href={`${getColumnCategoryUrl(entry.data.category)}`} class="category__link">
            <div class="category__link-content">
              <IoFolderOutline />
              <span>{getColumnCategoryDataBySlug(entry.data.category).name}</span>
            </div>
          </a>
        </div>
        <h1 class="title">{entry.data.title}</h1>
        <div class="thumb">
          <Image src={entry.data.thumbnail} width={1600} height={900} alt={entry.data.title} />
        </div>
        <ArticleContent entry={entry} components={{ TableOfContents, AdUnit }}  />
        <SnsShare postUrl={currentUrl} title={entry.data.title} />
      </main>
      <ColumnSidebar />
    </div>
  </Container>
</div>
</BaseLayout>

<style lang="scss">

.mv{
  padding: 20rem 0 12rem;
  display: flex;
  align-items: center;
  justify-content: center;

  @include mixin.sp {
    padding: 16rem 0 9rem;
  }

  &__title {
    font-size: 3.2rem;
    font-weight: bold;
    color: white;
    letter-spacing: .1em;

    @include mixin.sp {
      font-size: 2.4rem;
    }
  }
}

.body {
	position: relative;
	width: 100%;
	background: #fff;

  &::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
				background-image: var(--bgImg);
		background-size: 100% auto;
		background-repeat: repeat-y;
		opacity: 0.2;
    pointer-events: none;

    @include mixin.sp {
						background-image: var(--bgImgSp);
		}
	}
}

.wrap {
  position: relative;
  display: flex;
  // align-items: flex-start;
  gap: 4.8rem;
  padding: 14rem 0 12rem;
  z-index: 1;

  @include mixin.tab {
    gap: 2.4rem;
  }

  @include mixin.tab-s {
    flex-direction: column;
    gap: 8rem;
  }

  @include mixin.sp {
    padding: 8rem 0;
  }
}

.main {
  flex-grow: 1;
  padding-left: 2.4rem;
  padding-right: 2.4rem;
	width: 100%;

  @include mixin.sp {
    padding: 0;
  }
}

.category {
  display: flex;
  justify-content: flex-start;

  &__link {
    display: block;
    background-image: linear-gradient(to right bottom, var.$c-key-1, var.$c-key-2);
    border-radius: .3rem;

    @include mixin.hover {
      &:hover {
        .category__link-content {
          background-color: transparent;
          border-color: transparent;
          color: #fff;
        }
      }
    }
  }

  &__link-content {
    display: inline-flex;
    align-items: center;
    border: .1rem solid rgba(0,0,0, .2);
    padding: .2rem 1.2rem .3rem;
    border-radius: .3rem;
    gap: .4rem;
    background-color: #fff;
    transition: all .3s;

    svg {
      transform: translateY(.05rem);
    }

    span {
      display: block;
      font-size: 1.4rem;
      font-weight: 600;

    }
  }
}

.title {
  position: relative;
  font-size: 3.2rem;
  font-weight: bold;
  padding-bottom: 1.2rem;
  margin-top: 3.2rem;

  @include mixin.tab {
    font-size: 2.8rem;
  }

  @include mixin.sp {
    font-size: 2rem;
  }

  &::before {
    content: '';
    width: 100%;
    height: .3rem;
    background-image: linear-gradient(to right , var.$c-key-1, var.$c-key-2);
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
}

.thumb {
  position: relative;
  margin-top: 2.4rem;
  aspect-ratio: 16 / 9;
  display: flex;

  &::after {
    content: '';
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to right ,var.$c-key-1, var.$c-key-2);
    opacity: .2;
    opacity: 0;
    position: absolute;
    left: 0;
    top: 0;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.tag {
  display: flex;
  flex-wrap: wrap;
  gap: .8rem;

  &__link {
    display: block;
    padding: .1rem;

    span {
      display: block;
      font-size: 1.4rem;
      font-weight: 600;
      border: .1rem solid rgba(0,0,0, .2);
      padding: .2rem 1.2rem .3rem;
      border-radius: .3rem;

      &::before {
        content: '#';
        margin-right: .2rem;
      }
    }
  }
}
</style>