---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Container from '../../components/Container.astro';
import ArticleSidebar from '../../components/ArticleSidebar.astro';
import {articleTags} from '../../data/article-tags';
import SnsShare from '../../components/Article/SnsShare.astro';
import {getTagDataBySlug} from '../../utils/articleTags';
import TableOfContents from '../../components/TableOfContents.astro';

import { getCollection } from 'astro:content';
import ArticleContent from '../../components/Article/ArticleContent.astro';
// 1. コレクションエントリーごとに新しいパスを生成
export async function getStaticPaths() {
  const articleEntries = await getCollection('article');
  return articleEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. テンプレートでは、プロパティからエントリーを直接取得できる
const { entry } = Astro.props;

const selectedTags = entry.data.tags.map((tag) => getTagDataBySlug(tag));
const sortedTags = selectedTags.sort((a, b) => a.kana.localeCompare(b.kana));
---

<BaseLayout>
<Container>
  <div class="wrap">
    <main class="main">
      <ul class="tag">
        {
          sortedTags.map((tag)  => (
            <li class="tag__item">
              <span class="tag__link">
                <span>{tag.label}</span>
              </span>
            </li>
          ))
        }
      </ul>
      <h1 class="title">{entry.data.title}</h1>
      <div class="thumb">
        <img src={entry.data.image} alt={entry.data.title} width={1600} height={900} />
      </div>
      <ArticleContent entry={entry} components={{ TableOfContents }}  />
      <div class="keyward">
        <p class="keyward__title">この記事のキーワード</p>
        <ul class="tag keyward__tag">
          {
            sortedTags.map((tag)  => (
              <li class="tag__item">
                <span class="tag__link">
                  <span>{tag.label}</span>
                </span>
              </li>
            ))
          }
        </ul>
      </div>

      <SnsShare />
    </main>
    <ArticleSidebar />
  </div>
</Container>
</BaseLayout>


<style lang="scss">

.wrap {
  display: flex;
  align-items: flex-start;
  gap: 4.8rem;
  padding: 16rem 0 12rem;

  @include mixin.tab {
    gap: 2.4rem;
  }

  @include mixin.tab-s {
    flex-direction: column;
    gap: 8rem;
  }

  @include mixin.sp {
    padding: 12rem 0 8rem;
  }
}

.main {
  flex-grow: 1;
  padding-left: 2.4rem;
  padding-right: 2.4rem;

  @include mixin.sp {
    padding: 0;
  }
}

.title {
  position: relative;
  font-size: 3.2rem;
  font-weight: bold;
  padding-bottom: 1.2rem;
  margin-top: 3.2rem;

  @include mixin.tab {
    font-size: 2.8rem;
  }

  @include mixin.sp {
    font-size: 2rem;
  }

  &::before {
    content: '';
    width: 100%;
    height: .3rem;
    background-image: linear-gradient(to right , var.$c-key-1, var.$c-key-2);
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
}

.thumb {
  position: relative;
  margin-top: 2.4rem;
  aspect-ratio: 16 / 9;
  display: flex;

  &::after {
    content: '';
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to right ,var.$c-key-1, var.$c-key-2);
    opacity: .2;
    position: absolute;
    left: 0;
    top: 0;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.tag {
  display: flex;
  flex-wrap: wrap;
  gap: .8rem;

  &__item {}

  &__link {
    display: block;
    padding: .1rem;

    span {
      display: block;
      font-size: 1.4rem;
      font-weight: 600;
      border: .1rem solid rgba(0,0,0, .2);
      padding: .2rem 1.2rem .3rem;
      border-radius: .3rem;

      &::before {
        content: '#';
        margin-right: .2rem;
      }
    }
  }
}

.keyward {
  position: relative;
  padding: 3.2rem 2.4rem;
  background-color: rgba(#fff, .5);
  margin-top: 8rem;
  border: .1rem solid #eee;

  @include mixin.sp {
      padding: 2.4rem;
    }
}

.keyward__title {
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  display: flex;justify-content: center;
  align-items: center;

  @include mixin.sp {
        font-size: 1.8rem;
      }

  &::before {
    // position: absolute;
    content: '#';
    font-family: 'Noto Sans JP Variable';
    font-size: 2.4rem;
    font-weight: bold;
    background-image: linear-gradient(to right ,var.$c-key-1, var.$c-key-2);
    -webkit-background-clip: text;
    color: transparent;
    margin-right: .5rem;

    @include mixin.sp {
        font-size: 2rem;
      }
  }
}

.keyward__tag {
  justify-content: center;
  margin-top: 2.4rem;

  @include mixin.sp {
    margin-top: 1.6rem;
  }
}
</style>